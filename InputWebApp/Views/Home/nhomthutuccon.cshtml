<section id="configuration">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title">Danh sách thủ tục hành chính</h4>
                    <a class="heading-elements-toggle"><i class="fa fa-ellipsis-v font-medium-3"></i></a>
                    <div class="heading-elements">
                        <ul class="list-inline mb-0">
                            <li><a data-action="collapse"><i class="ft-minus"></i></a></li>
                            <li><a data-action="reload"><i class="ft-rotate-cw"></i></a></li>
                            <li><a data-action="expand"><i class="ft-maximize"></i></a></li>
                            <li><a data-action="close"><i class="ft-x"></i></a></li>
                        </ul>
                    </div>
                </div>
                <div class="card-content collapse show">
                    <div class="card-body card-dashboard">
                        <div id="grid" style="height: 540px"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script type="text/javascript">
        $(() => {
            const URL = '/api/ThuThuHanhChinh';

            function sendRequest(url, method = 'GET', data) {
                const d = $.Deferred();

                $.ajax(url, {
                    method,
                    data,
                    cache: false,
                    xhrFields: { withCredentials: true },
                }).done((result) => {
                    d.resolve(method === 'GET' ? result.data : result);
                }).fail((xhr) => {
                    d.reject(xhr.responseJSON ? xhr.responseJSON.Message : xhr.statusText);
                });

                return d.promise();
            }

            const nhomThuTucStore = new DevExpress.data.CustomStore({
                key: 'id',
                load(loadOptions) {
                    const deferred = $.Deferred();
                    const args = {};

                    [
                        'skip',
                        'take',
                        'requireTotalCount',
                        'requireGroupCount',
                        'sort',
                        'filter',
                        'totalSummary',
                        'group',
                        'groupSummary',
                    ].forEach((i) => {
                        if (i in loadOptions && isNotEmpty(loadOptions[i])) {
                            args[i] = JSON.stringify(loadOptions[i]);
                        }
                    });
                    $.ajax({
                        url: `${URL}/danhsachnhomthutuc`,
                        dataType: 'json',
                        data: args,
                        success(result) {
                            deferred.resolve(result);
                        },
                        error() {
                            deferred.reject('Data Loading Error');
                        },
                    });

                    return deferred.promise();
                }
            });

            const ordersStore = new DevExpress.data.CustomStore({
                key: 'id',
                load(loadOptions) {
                    const deferred = $.Deferred();
                    const args = {};

                    [
                        'skip',
                        'take',
                        'requireTotalCount',
                        'requireGroupCount',
                        'sort',
                        'filter',
                        'totalSummary',
                        'group',
                        'groupSummary',
                    ].forEach((i) => {
                        if (i in loadOptions && isNotEmpty(loadOptions[i])) {
                            args[i] = JSON.stringify(loadOptions[i]);
                        }
                    });
                    $.ajax({
                        url: `${URL}/danhsachnhomthutuccon/0`,
                        dataType: 'json',
                        data: args,
                        success(result) {
                            //console.log(result);
                            deferred.resolve(result);
                        },
                        error() {
                            deferred.reject('Data Loading Error');
                        },
                    });

                    return deferred.promise();
                },
                insert(values) {
                    const d = $.Deferred();

                    $.ajax(`${URL}/themmoinhomthutuccon`, {
                        method: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(values),
                        cache: false,
                        xhrFields: { withCredentials: true },
                    }).done((result) => {
                        d.resolve(result);
                    }).fail((xhr) => {
                        d.reject(xhr.responseText ? xhr.responseText : xhr.statusText);
                    });

                    return d.promise();
                },
                update(key, values) {
                    const curGrid = $('#grid').dxDataGrid("instance");
                    const curRow = curGrid.getRowIndexByKey(key);
                    const curData = curGrid.getVisibleRows()[curRow];
                    const d = $.Deferred();

                    console.log(values)

                    $.ajax(`${URL}/capnhatnhomthutuccon/${key}`, {
                        method: 'PUT',
                        contentType: 'application/json',
                        data: JSON.stringify({ ...curData.data, ...values }),
                        cache: false,
                        xhrFields: { withCredentials: true },
                    }).done((result) => {
                        console.log(result)
                        d.resolve(result);
                    }).fail((xhr) => {
                        d.reject(xhr.responseText ? xhr.responseText : xhr.statusText);
                    });

                    return d.promise();
                },
                //remove(key) {
                //    return sendRequest(`${URL}/DeleteOrder`, 'DELETE', {
                //        key,
                //    });
                //},
            });

            const dataGrid = $('#grid').dxDataGrid({
                dataSource: ordersStore,
                showColumnLines: true,
                showRowLines: true,
                rowAlternationEnabled: true,
                showBorders: true,
                filterRow: {
                    visible: true,
                },
                searchPanel: {
                    visible: true,
                    width: 350,
                    placeholder: 'Tìm tên thủ tục',
                },
                sorting: { mode: 'none' },
                paging: {
                    pageSize: 10,
                },
                pager: {
                    visible: true,
                    showInfo: true,
                    showNavigationButtons: true,
                },
                //remoteOperations: true,
                customizeColumns: function (columns) {
                    columns[0].width = 100;
                },
                editing: {
                    refreshMode: 'reshape',
                    mode: 'row',
                    allowAdding: true,
                    allowUpdating: true,
                    //allowDeleting: true,
                },
                columns: [
                    {
                        dataField: 'tenNhom',
                        caption: 'Tên Nhóm',
                        headerFilter: {
                            allowSearch: true,
                        }
                    },
                    {
                        dataField: 'moTa',
                        caption: 'Mô tả',
                        headerFilter: {
                            allowSearch: true,
                        }
                    },
                    {
                        dataField: 'parentId',
                        caption: 'Nhóm Thủ tục',
                        dataType: "number",
                        width: 200,
                        headerFilter: {
                            allowSearch: false,
                        },
                        lookup: {
                            dataSource: new DevExpress.data.CustomStore({
                                key: 'id',
                                loadMode: 'raw',
                                load(loadOptions) {
                                    console.log('chilari');
                                    const deferred = $.Deferred();
                                    $.ajax({
                                        url: `${URL}/danhsachnhomthutuc`,
                                        dataType: 'json',
                                        success(result) {
                                            deferred.resolve(result);
                                        },
                                        error() {
                                            deferred.reject('Data Loading Error');
                                        },
                                    });

                                    return deferred.promise();
                                },
                            }),
                            valueExpr: 'id',
                            displayExpr: 'tenNhom',
                        },
                    },
                    {
                        type: 'buttons',
                        width: 110,
                        buttons: ['edit', 'delete'],
                    },
                ],
            }).dxDataGrid('instance');
        });
    </script>
}